@model EmployeeBonus.ViewModels.EmployeeBonusViewModel
@{
    ViewBag.Title = "EmployeeForm";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@if (Model.Employee.Id == 0)
{
    <h1>New Employee</h1>
}
else
{
    <h1>Edit Employee</h1>
}

@using (Html.BeginForm("Save", "Employees", FormMethod.Post, new { enctype = "multipart/form-data" }))
{

    <div class="form-group">
        @Html.LabelFor(m => m.Employee.Name)
        @Html.TextBoxFor(m => m.Employee.Name, new { @class = "form-control" })
        @Html.ValidationMessageFor(m => m.Employee.Name)
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.Employee.DepartmentId)
        @Html.DropDownListFor(m => m.Employee.DepartmentId, new SelectList(Model.Departments, "Id", "Name"), "Select Department", new { @class = "form-control" })
        @Html.ValidationMessageFor(m => m.Employee.Id)
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.Employee.ExperienceLevel)
        @Html.TextBoxFor(m => m.Employee.ExperienceLevel, new { @class = "form-control" })
        @Html.ValidationMessageFor(m => m.Employee.ExperienceLevel)
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.Employee.JoiningDate)
        @Html.TextBoxFor(m => m.Employee.JoiningDate, new { @class = "form-control" })
        @Html.ValidationMessageFor(m => m.Employee.JoiningDate)
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.Employee.Salary)
        @Html.TextBoxFor(m => m.Employee.Salary, new { @class = "form-control" })
        @Html.ValidationMessageFor(m => m.Employee.Salary)
    </div>

    @Html.HiddenFor(m => m.Employee.Id)
    @Html.AntiForgeryToken()
    <button class="btn btn-success">Save</button>
}

@Scripts.Render("~/bundles/jqueryval")
